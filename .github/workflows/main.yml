name: 'CI with ko (Version Change)'

on:
  push:
    branches:
      - main

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.filter.outputs.version }}
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3

      -
        name: Check if .version file changed
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            version:
              - '.version'

  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21'

      - name: Run Ginkgo unit tests with coverage
        run: |
          go install github.com/onsi/ginkgo/v2/ginkgo@latest
          ginkgo \
            --trace \
            --fail-on-pending \
            --randomize-all \
            --cover \
            --coverpkg=./app/... \
            --coverprofile=coverage.out \
            ./app/... | tee ginkgo-unit.log
         EXIT_CODE=${PIPESTATUS[0]}
         cat ginkgo-unit.log
         exit $EXIT_CODE

      - name: Run integration tests
        run: |
          ginkgo \
            --trace \
            --fail-on-pending \
            --randomize-all \
            ./tests/integration

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: Ignaciojeria/transport-app

  build-and-push:
    runs-on: ubuntu-latest
    needs: check-version-change
    if: needs.check-version-change.outputs.version_changed == 'true'
    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3

      -
        name: Set KO_IMAGE_NAME
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)
          IMAGE_NAME="${REPO_NAME}"
          echo "Image name: $IMAGE_NAME"
          echo "KO_IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      -
        name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      -
        name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21'

      -
        name: Install ko
        run: go install github.com/google/ko@latest

      -
        name: Set environment variables
        env:
          KO_DOCKER_REPO: ${{ vars.KO_DOCKER_REPO }}  # Usa la repository variable
          KO_DEFAULTBASEIMAGE: ${{ vars.KO_DEFAULTBASEIMAGE }}  # Usa la repository variable
        run: |
          echo "KO_DOCKER_REPO=$KO_DOCKER_REPO" >> $GITHUB_ENV
          echo "KO_DEFAULTBASEIMAGE=$KO_DEFAULTBASEIMAGE" >> $GITHUB_ENV

      -
        name: Print environment variables
        run: |
          echo "KO_DOCKER_REPO: $KO_DOCKER_REPO"
          echo "KO_DEFAULTBASEIMAGE: $KO_DEFAULTBASEIMAGE"
          echo "KO_IMAGE_NAME: $KO_IMAGE_NAME"

      -
        name: Build and push image with ko
        run: |
          IMAGE_REF=$(ko build .)
          echo "IMAGE_REF=$IMAGE_REF" >> $GITHUB_ENV

      -
        name: Deploy to Cloud Run
        run: |
          SERVICE_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f2 | tr '.' '-' | tr '_' '-' | tr '[:upper:]' '[:lower:]')
          
          gcloud run deploy "$SERVICE_NAME" \
            --image="$IMAGE_REF" \
            --region=us-central1 \
            --service-account="transport-app-sa@einar-404623.iam.gserviceaccount.com" \
            --platform=managed \
            --allow-unauthenticated \
            --set-secrets="OBSERVABILITY_STRATEGY=OBSERVABILITY_STRATEGY:latest,\
            OPENOBSERVE_AUTHORIZATION=OPENOBSERVE_AUTHORIZATION:latest,\
            OPENOBSERVE_HTTP_ENDPOINT=OPENOBSERVE_HTTP_ENDPOINT:latest,\
            OPENOBSERVE_STREAM_NAME=OPENOBSERVE_STREAM_NAME:latest,\
            TIDB_DATABASE=TIDB_DATABASE:latest,\
            TIDB_HOSTNAME=TIDB_HOSTNAME:latest,\
            TIDB_PASSWORD=TIDB_PASSWORD:latest,\
            TIDB_PORT=TIDB_PORT:latest,\
            TIDB_TLS_CONFIG=TIDB_TLS_CONFIG:latest,\
            TIDB_USERNAME=TIDB_USERNAME:latest,\
            OPTIMIZATION_STRATEGY=OPTIMIZATION_STRATEGY:latest,\
            LOCATION_IQ_ACCESS_TOKEN=LOCATION_IQ_ACCESS_TOKEN:latest,\
            LOCATION_IQ_DNS=LOCATION_IQ_DNS:latest,\
            AI_PROVIDER_STRATEGY=AI_PROVIDER_STRATEGY:latest,\
            GEMINI_API_KEY=GEMINI_API_KEY:latest,\
            FIREBASE_API_KEY=FIREBASE_API_KEY:latest"