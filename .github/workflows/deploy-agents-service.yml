name: 'Deploy Agents Service (Manual)'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      region:
        description: 'GCP region to deploy to'
        required: true
        default: 'us-central1'
        type: string

jobs:
  deploy-agents-service:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21'

      - name: Install ko
        run: go install github.com/google/ko@latest

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Set environment variables
        env:
          KO_DOCKER_REPO: ${{ vars.KO_DOCKER_REPO }}
          KO_DEFAULTBASEIMAGE: ${{ vars.KO_DEFAULTBASEIMAGE }}
        run: |
          echo "KO_DOCKER_REPO=$KO_DOCKER_REPO" >> $GITHUB_ENV
          echo "KO_DEFAULTBASEIMAGE=$KO_DEFAULTBASEIMAGE" >> $GITHUB_ENV
          echo "DEPLOY_ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          echo "DEPLOY_REGION=${{ github.event.inputs.region }}" >> $GITHUB_ENV

      - name: Print deployment info
        run: |
          echo "Deploying Agents Service to: $DEPLOY_ENVIRONMENT"
          echo "Region: $DEPLOY_REGION"
          echo "KO_DOCKER_REPO: $KO_DOCKER_REPO"
          echo "KO_DEFAULTBASEIMAGE: $KO_DEFAULTBASEIMAGE"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Agents service image to GCP
        working-directory: ./agents-service
        run: |
          IMAGE_REF=$(ko build .)
          echo "IMAGE_REF=$IMAGE_REF" >> $GITHUB_ENV
          echo "Built Agents service image: $IMAGE_REF"

      - name: Build and push Agents service image to GitHub Container Registry
        working-directory: ./agents-service
        env:
          KO_DOCKER_REPO: ghcr.io/${{ github.repository }}
        run: |
          REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
          export KO_DOCKER_REPO="ghcr.io/$REPO_NAME"
          ko build .
          echo "Pushed Agents service to GitHub Container Registry"

      - name: Deploy Agents service to Cloud Run
        run: |
          SERVICE_NAME="agents-service"
          if [ "$DEPLOY_ENVIRONMENT" = "staging" ]; then
            SERVICE_NAME="agents-service-staging"
          fi
          
          echo "Deploying service: $SERVICE_NAME"
          
          gcloud run deploy "$SERVICE_NAME" \
            --image="$IMAGE_REF" \
            --region="$DEPLOY_REGION" \
            --service-account="transport-app-sa@einar-404623.iam.gserviceaccount.com" \
            --platform=managed \
            --allow-unauthenticated \
            --port=8080 \
            --memory=512Mi \
            --cpu=1 \
            --max-instances=10 \
            --set-env-vars="DB_STRATEGY=disabled" \
            --set-secrets="NATS_CONNECTION_URL=NATS_CONNECTION_URL:latest,\
            ENVIRONMENT=ENVIRONMENT:latest,\
            AGENT_OPTIMIZATION_REQUESTED_SUBSCRIPTION=AGENT_OPTIMIZATION_REQUESTED_SUBSCRIPTION:latest,\
            STORJ_ACCESS_GRANT=STORJ_ACCESS_GRANT:latest,\
            NATS_CONNECTION_CREDS_FILECONTENT=NATS_CONNECTION_CREDS_FILECONTENT:latest,\
            GOOGLE_PROJECT_ID=GOOGLE_PROJECT_ID:latest,\
            GOOGLE_PROJECT_LOCATION=GOOGLE_PROJECT_LOCATION:latest,\
            TRANSPORT_APP_TOPIC=TRANSPORT_APP_TOPIC:latest,\
            OPENOBSERVE_AUTHORIZATION=OPENOBSERVE_AUTHORIZATION:latest,\
            OPENOBSERVE_HTTP_ENDPOINT=OPENOBSERVE_HTTP_ENDPOINT:latest,\
            OPENOBSERVE_STREAM_NAME=OPENOBSERVE_STREAM_NAME:latest,\
            OBSERVABILITY_STRATEGY=OBSERVABILITY_STRATEGY:latest"

      - name: Get service URL
        run: |
          SERVICE_NAME="agents-service"
          if [ "$DEPLOY_ENVIRONMENT" = "staging" ]; then
            SERVICE_NAME="agents-service-staging"
          fi
          
          SERVICE_URL=$(gcloud run services describe "$SERVICE_NAME" \
            --region="$DEPLOY_REGION" \
            --format="value(status.url)")
          
          echo "Agents Service deployed successfully!"
          echo "Service URL: $SERVICE_URL"
          
          # Set output for potential use in other jobs
          echo "service_url=$SERVICE_URL" >> $GITHUB_OUTPUT 