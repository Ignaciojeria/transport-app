{"components":{"schemas":{"CreateTenantRequest":{"description":"CreateTenantRequest schema","properties":{"country":{"example":"CL","type":"string"},"email":{"example":"org-email@gmail.com","type":"string"},"name":{"example":"org-name","type":"string"}},"required":["name","email","country"],"type":"object"},"CreateTenantResponse":{"description":"CreateTenantResponse schema","properties":{"country":{"example":"CL","type":"string"},"id":{"example":"ed469f7b-1f18-47b5-aca6-6a3df543333b","type":"string"},"message":{"example":"Tenant created successfully.","type":"string"},"tenant":{"example":"ed469f7b-1f18-47b5-aca6-6a3df543333b-CL","type":"string"}},"type":"object"},"HTTPError":{"description":"HTTPError schema","properties":{"detail":{"description":"Human readable error message","nullable":true,"type":"string"},"errors":{"items":{"properties":{"more":{"additionalProperties":{},"description":"Additional information about the error","nullable":true,"type":"object"},"name":{"description":"For example, name of the parameter that caused the error","type":"string"},"reason":{"description":"Human readable error message","type":"string"}},"type":"object"},"nullable":true,"type":"array"},"instance":{"nullable":true,"type":"string"},"status":{"description":"HTTP status code","example":403,"nullable":true,"type":"integer"},"title":{"description":"Short title of the error","nullable":true,"type":"string"},"type":{"description":"URL of the error type. Can be used to lookup the error in a documentation","nullable":true,"type":"string"}},"type":"object"},"RegisterRequest":{"description":"RegisterRequest schema","properties":{"email":{"type":"string"}},"type":"object"},"RegisterResponse":{"description":"RegisterResponse schema","properties":{"message":{"type":"string"}},"type":"object"},"UpsertOrderRequest":{"description":"UpsertOrderRequest schema","properties":{"collectAvailabilityDate":{"properties":{"date":{"type":"string"},"timeRange":{"properties":{"endTime":{"type":"string"},"startTime":{"type":"string"}},"type":"object"}},"type":"object"},"destination":{"properties":{"addressInfo":{"properties":{"addressLine1":{"type":"string"},"addressLine2":{"type":"string"},"contact":{"properties":{"additionalContactMethods":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"documents":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"email":{"type":"string"},"fullName":{"type":"string"},"nationalID":{"type":"string"},"phone":{"type":"string"}},"type":"object"},"district":{"type":"string"},"latitude":{"format":"double","type":"number"},"longitude":{"format":"double","type":"number"},"province":{"type":"string"},"state":{"type":"string"},"timeZone":{"type":"string"},"zipCode":{"type":"string"}},"type":"object"},"deliveryInstructions":{"type":"string"},"nodeInfo":{"properties":{"referenceID":{"type":"string"}},"type":"object"}},"type":"object"},"extraFields":{"additionalProperties":{"type":"string"},"type":"object"},"groupBy":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"orderType":{"properties":{"description":{"type":"string"},"type":{"type":"string"}},"type":"object"},"origin":{"properties":{"addressInfo":{"properties":{"addressLine1":{"type":"string"},"addressLine2":{"type":"string"},"contact":{"properties":{"additionalContactMethods":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"documents":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"email":{"type":"string"},"fullName":{"type":"string"},"nationalID":{"type":"string"},"phone":{"type":"string"}},"type":"object"},"district":{"type":"string"},"latitude":{"format":"double","type":"number"},"longitude":{"format":"double","type":"number"},"province":{"type":"string"},"state":{"type":"string"},"timeZone":{"type":"string"},"zipCode":{"type":"string"}},"type":"object"},"nodeInfo":{"properties":{"referenceID":{"type":"string"}},"type":"object"}},"type":"object"},"packages":{"items":{"properties":{"dimensions":{"properties":{"height":{"format":"double","type":"number"},"length":{"format":"double","type":"number"},"unit":{"type":"string"},"width":{"format":"double","type":"number"}},"type":"object"},"insurance":{"properties":{"currency":{"type":"string"},"unitValue":{"format":"double","type":"number"}},"type":"object"},"items":{"items":{"properties":{"description":{"type":"string"},"dimensions":{"properties":{"height":{"format":"double","type":"number"},"length":{"format":"double","type":"number"},"unit":{"type":"string"},"width":{"format":"double","type":"number"}},"type":"object"},"insurance":{"properties":{"currency":{"type":"string"},"unitValue":{"format":"double","type":"number"}},"type":"object"},"quantity":{"properties":{"quantityNumber":{"type":"integer"},"quantityUnit":{"type":"string"}},"type":"object"},"skills":{"items":{"properties":{"description":{"type":"string"},"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"sku":{"type":"string"},"weight":{"properties":{"unit":{"type":"string"},"value":{"format":"double","type":"number"}},"type":"object"}},"type":"object"},"type":"array"},"labels":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"lpn":{"type":"string"},"weight":{"properties":{"unit":{"type":"string"},"value":{"format":"double","type":"number"}},"type":"object"}},"type":"object"},"type":"array"},"promisedDate":{"properties":{"dateRange":{"properties":{"endDate":{"type":"string"},"startDate":{"type":"string"}},"type":"object"},"serviceCategory":{"type":"string"},"timeRange":{"properties":{"endTime":{"type":"string"},"startTime":{"type":"string"}},"type":"object"}},"type":"object"},"referenceID":{"type":"string"},"references":{"items":{"properties":{"type":{"type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"}},"required":["referenceID"],"type":"object"},"UpsertOrderResponse":{"description":"UpsertOrderResponse schema","properties":{"message":{"type":"string"},"status":{"type":"string"}},"type":"object"},"unknown-interface":{"description":"unknown-interface schema"}}},"info":{"description":"\nThis is the autogenerated OpenAPI documentation for your [Fuego](https://github.com/go-fuego/fuego) API.\n\nBelow is a Fuego Cheatsheet to help you get started. Don't hesitate to check the [Fuego documentation](https://go-fuego.dev) for more details.\n\nHappy coding! ðŸ”¥\n\n## Usage\n\n### Route registration\n\n```go\nfunc main() {\n\t// Create a new server\n\ts := fuego.NewServer()\n\n\t// Register some routes\n\tfuego.Post(s, \"/hello\", myController)\n\tfuego.Get(s, \"/myPath\", otherController)\n\tfuego.Put(s, \"/hello\", thirdController)\n\n\tadminRoutes := fuego.Group(s, \"/admin\")\n\tfuego.Use(adminRoutes, myMiddleware) // This middleware (for authentication, etc...) will be available for routes starting by /admin/*, \n\tfuego.Get(adminRoutes, \"/hello\", groupController) // This route will be available at /admin/hello\n\n\t// Start the server\n\ts.Start()\n}\n```\n\n### Basic controller\n\n```go\ntype MyBody struct {\n\tName string `json:\"name\" validate:\"required,max=30\"`\n}\n\ntype MyResponse struct {\n\tAnswer string `json:\"answer\"`\n}\n\nfunc hello(ctx fuego.ContextWithBody[MyBody]) (*MyResponse, error) {\n\tbody, err := ctx.Body()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn \u0026MyResponse{Answer: \"Hello \" + body.Name}, nil\n}\n```\n\n### Add openAPI information to the route\n\n```go\nimport (\n\t\"github.com/go-fuego/fuego\"\n\t\"github.com/go-fuego/fuego/option\"\n\t\"github.com/go-fuego/fuego/param\"\n)\n\nfunc main() {\n\ts := fuego.NewServer()\n\n\t// Custom OpenAPI options\n\tfuego.Post(s, \"/\", myController\n\t\toption.Description(\"This route does something...\"),\n\t\toption.Summary(\"This is my summary\"),\n\t\toption.Tags(\"MyTag\"), // A tag is set by default according to the return type (can be deactivated)\n\t\toption.Deprecated(), // Marks the route as deprecated in the OpenAPI spec\n\n\t\toption.Query(\"name\", \"Declares a query parameter with default value\", param.Default(\"Carmack\")),\n\t\toption.Header(\"Authorization\", \"Bearer token\", param.Required()),\n\t\toptionPagination,\n\t\toptionCustomBehavior,\n\t)\n\n\ts.Run()\n}\n\nvar optionPagination = option.Group(\n\toption.QueryInt(\"page\", \"Page number\", param.Default(1), param.Example(\"1st page\", 1), param.Example(\"42nd page\", 42)),\n\toption.QueryInt(\"perPage\", \"Number of items per page\"),\n)\n\nvar optionCustomBehavior = func(r *fuego.BaseRoute) {\n\tr.XXX = \"YYY\"\n}\n```\n\nThen, in the controller\n\n```go\ntype MyResponse struct {\n\tAnswer string `json:\"answer\"`\n}\n\nfunc getAllPets(ctx fuego.ContextNoBody) (*MyResponse, error) {\n\tname := ctx.QueryParam(\"name\")\n\tperPage, _ := ctx.QueryParamIntErr(\"per_page\")\n\n\treturn \u0026MyResponse{Answer: \"Hello \" + name}, nil\n}\n```\n","title":"OpenAPI","version":"0.0.1"},"openapi":"3.1.0","paths":{"/":{"get":{"description":"#### Controller: \n\n`github.com/99designs/gqlgen/graphql/playground.Handler.func1`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"GET_/","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/unknown-interface"}},"application/xml":{"schema":{"$ref":"#/components/schemas/unknown-interface"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"GraphQL Playground","tags":["graphql"]}},"/health":{"get":{"description":"#### Controller: \n\n`net/http.Handler.ServeHTTP`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"GET_/health","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/unknown-interface"}},"application/xml":{"schema":{"$ref":"#/components/schemas/unknown-interface"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"healthCheck"}},"/orders":{"post":{"description":"#### Controller: \n\n`transport-app/app/adapter/in/fuegoapi.upsertOrder.func1`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"POST_/orders","parameters":[{"description":"api tenant","in":"header","name":"tenant","required":true,"schema":{"type":"string"}},{"description":"api consumer key","in":"header","name":"consumer","required":true,"schema":{"type":"string"}},{"description":"api commerce key","in":"header","name":"commerce","required":true,"schema":{"type":"string"}},{"description":"api channel key","in":"header","name":"channel","required":true,"schema":{"type":"string"}},{"in":"header","name":"Accept","schema":{"type":"string"}}],"requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/UpsertOrderRequest"}}},"description":"Request body for request.UpsertOrderRequest","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpsertOrderResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/UpsertOrderResponse"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"upsert order","tags":["orders"]}},"/query":{"post":{"description":"#### Controller: \n\n`github.com/99designs/gqlgen/graphql/handler.(*Server).ServeHTTP`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"POST_/query","responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/unknown-interface"}},"application/xml":{"schema":{"$ref":"#/components/schemas/unknown-interface"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"serve h t t p","tags":["graphql"]}},"/register":{"post":{"description":"#### Controller: \n\n`transport-app/app/adapter/in/fuegoapi.register.func1`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"POST_/register","parameters":[{"in":"header","name":"Accept","schema":{"type":"string"}}],"requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/RegisterRequest"}}},"description":"Request body for request.RegisterRequest","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/RegisterResponse"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"register","tags":["registration"]}},"/tenants":{"post":{"description":"#### Controller: \n\n`transport-app/app/adapter/in/fuegoapi.createTenant.func1`\n\n#### Middlewares:\n\n- `github.com/go-fuego/fuego.defaultLogger.middleware`\n\n---\n\n","operationId":"POST_/tenants","parameters":[{"in":"header","name":"Accept","schema":{"type":"string"}}],"requestBody":{"content":{"*/*":{"schema":{"$ref":"#/components/schemas/CreateTenantRequest"}}},"description":"Request body for request.CreateTenantRequest","required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateTenantResponse"}},"application/xml":{"schema":{"$ref":"#/components/schemas/CreateTenantResponse"}}},"description":"OK"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Bad Request _(validation or deserialization error)_"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/HTTPError"}},"application/xml":{"schema":{"$ref":"#/components/schemas/HTTPError"}}},"description":"Internal Server Error _(panics)_"},"default":{"description":""}},"summary":"create tenant","tags":["tenants"]}}},"servers":[{"description":"local server","url":"http://:8080"}],"tags":[{"name":"graphql"},{"name":"orders"},{"name":"registration"},{"name":"tenants"}]}